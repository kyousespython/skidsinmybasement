if not game:IsLoaded() then
	game.Loaded:Wait()
end

local VirtualUser = game:GetService("VirtualUser")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Player = game:GetService("Players").LocalPlayer or game:GetService("Players").PlayerAdded:Wait()

repeat task.wait() until game.CoreGui:FindFirstChild('RobloxPromptGui')

local promptOverlay = game:GetService("CoreGui").RobloxPromptGui.promptOverlay

promptOverlay.ChildAdded:connect(function(a)
	if a.Name == "ErrorPrompt" then
		while true do
			game:GetService("TeleportService"):Teleport(game.PlaceId)
			task.wait(2)
		end
	end
end)

Player.Idled:Connect(function()
	VirtualUser:CaptureController()
	VirtualUser:ClickButton2(Vector2.new())
end)

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()


local function Credits(Window)
	local Credits = Window:MakeTab({
		Name = "Credits",
		Icon = "rbxassetid://4483345278",
		PremiumOnly = false
	})

	Credits:AddLabel("<font color='rgb(124, 252, 0)'>kyo#2000 coded this while nutting</font>")
    Credits:AddLabel("<font color='rgb(124, 252, 0)'>.gg/kaosgen</font>")
    Credits:AddLabel("<font color='rgb(255, 0, 0)'>skids suck 💤</font>" )
end


local function Click(v)
	VirtualInputManager:SendMouseButtonEvent(v.AbsolutePosition.X+v.AbsoluteSize.X/2,v.AbsolutePosition.Y+50,0,true,v,1)
	VirtualInputManager:SendMouseButtonEvent(v.AbsolutePosition.X+v.AbsoluteSize.X/2,v.AbsolutePosition.Y+50,0,false,v,1)
	print("Clicked "..v.Name)
end


if game.PlaceId == 9264596435 then
	local Plot
	local PlayerPlot

	local SavedPosition

	local SelectedHero
	local SelectedChest

	local UpgradeLevel
	local SwingLooping
	local Swing2Looping
	local NextLevelLooping
	local HireLooping
	local UpgradeLooping
	local ChestLooping
	local ReincarnateLooping
	local MobLooping
	local SkillLooping

	local IsInLoopReincarnate
	local IsInLoopNextLevel
	local IsInLoopMobTP
	local IsInLoopAutoHire

	local HeadPosition

	local CurrentPage

	local HeroesList = {"None"}
	local PlotList = {"Your Own Plot"}

	local RarityBackgrounds = {
		["0 0.803922 0.803922 0.803922 0 1 0.803922 0.803922 0.803922 0 "] = "Common",
		["0 0.211765 0.513726 1 0 1 0.211765 0.513726 1 0 "] = "Rare",
		["0 0.411765 0.113725 1 0 1 0.411765 0.113725 1 0 "] = "Epic",
		["0 1 0.807843 0.180392 0 1 1 0.807843 0.180392 0 "] = "Legendary",
		["0 1 0 0.984314 0 1 1 1 0 0 "] = "Mythical",
		["0 0.796078 0.564706 1 0 1 0.796078 0.564706 1 0 "] = "Demonic",
		["0 0.835294 0.713726 0.231373 0 1 0.835294 0.713726 0.231373 0 "] = "Godly",
		["0 1 0.47451 0.47451 0 1 1 0.47451 0.47451 0 "] = "Celestial"
	}

	for i,v in pairs(workspace.Plots:GetChildren()) do
		if v.Owner.Value == Player then
			Plot = v
			PlayerPlot = v
		end
	end

	for i,v in pairs(workspace.Plots:GetChildren()) do
		if v.Owner.Value and v.Owner.Value ~= Player then
			table.insert(PlotList, v.Owner.Value.Name)
		else
			v.Owner.Changed:Connect(function()
				if v.Owner.Value then
					table.insert(PlotList, v.Owner.Value.Name)
				end
				repeat task.wait() until PlotDropdown ~= {"Your Own Plot"}
				PlotDropdown:Refresh(PlotList, true)
			end)
		end
	end

	repeat task.wait() until Plot
	repeat task.wait() until Plot:FindFirstChild("Heroes")

	for i,v in pairs(Plot.Heroes:GetChildren()) do
		table.insert(HeroesList, v.Name)
	end

	Plot.Heroes.ChildAdded:Connect(function(child)
		if not table.find(HeroesList, child.Name) then
			table.insert(HeroesList, child.Name)
			repeat task.wait() until Dropdown
			Dropdown:Refresh({child.Name}, false)
		end
	end)

elseif game.PlaceId == 9625096419 then
	local AutoTapLooping
	local AutoHatchLooping
	local AutoWheelLooping
	local AutoRebirthLooping
	local AutoEquipLooping
	local RemoveEggAnimLooping
	local RemoveNotifLooping
	local RemoveTradeLooping

	local SelectedEgg

	local EggList = {}

	local Network = require(game:GetService("ReplicatedStorage").Modules.Utils.Network)
	local Abbreviation = require(game:GetService("ReplicatedStorage").Modules.Utils.Abbreviation)
	local HatchingAnimation = require(Player.PlayerScripts.Client.ClientManager.PlayerController.Visualizations.Hatching)
	local Notifications = require(Player.PlayerScripts.Client.ClientManager.PlayerController.UI.Notifications)
	
	local PreviousFunction = Abbreviation.Abbreviate
	local PreviousFunction2 = HatchingAnimation.HatchEgg
	local PreviousFunction3 = Notifications.Notify

	for i,v in pairs(game:GetService("ReplicatedStorage").Communication.Events:GetChildren()) do
		v.Name = "Event"..i
	end

	for i,v in pairs(game:GetService("ReplicatedStorage").Communication.Functions:GetChildren()) do
		v.Name = "Function"..i
	end

	for i,v in pairs(game:GetService("Workspace").GameAssets.Capsules:GetChildren()) do
		table.insert(EggList, v.Name)
	end

	table.sort(EggList, function(a, b)
		return a > b
	end)

	local Window = OrionLib:MakeWindow({Name = "🎃 <font color='rgb(124, 252, 0)'>Kaos Ware</font> │ Tapper Simulator!", HidePremium = true, SaveConfig = true, ConfigFolder = "Kaos X Config", IntroEnabled = true, IntroText = "<font color='rgb(124, 252, 0)'>Kaos Utility v1.0.1</font>"})




    local InfoTab = Window:MakeTab({
        Name = "IMPORTANT",
        Icon = "rbxassetid://4370345144",
        PremiumOnly = true
    })
    
    InfoTab:AddParagraph("<font color='rgb(124, 252, 0)'>Information</font>","Please exept bugs. This GUI is still being developed and is soon going to be better than ever. Dont forget to join our Discord .gg/kaosgen!")
    
    InfoTab:AddLabel("Version : <font color='rgb(124, 252, 0)'>1.0.1</font>")
    InfoTab:AddLabel("STATUS : 🟢 ")
    
	local disc = InfoTab:AddSection({
		Name = "Discord"
	})

    disc:AddButton({
        Name = "Join Discord",
        Callback = function()
            local Settings = {
                InviteCode = "discord.gg/kaosgen"
              }
              
              local HttpService = game:GetService("HttpService")
              local RequestFunction
              
              if syn and syn.request then
                RequestFunction = syn.request
              elseif request then
                RequestFunction = request
              elseif http and http.request then
                RequestFunction = http.request
              elseif http_request then
                RequestFunction = http_request
              end
              
              local DiscordApiUrl = "http://127.0.0.1:%s/rpc?v=1"
              
              if not RequestFunction then
                return print("Your executor does not support http requests.")
              end
              
              for i = 6453, 6464 do
                local DiscordInviteRequest = function()
                    local Request = RequestFunction({
                        Url = string.format(DiscordApiUrl, tostring(i)),
                        Method = "POST",
                        Body = HttpService:JSONEncode({
                            nonce = HttpService:GenerateGUID(false),
                            args = {
                                invite = {code = Settings.InviteCode},
                                code = Settings.InviteCode
                            },
                            cmd = "INVITE_BROWSER"
                        }),
                        Headers = {
                            ["Origin"] = "https://discord.com",
                            ["Content-Type"] = "application/json"
                        }
                    })
                end
                spawn(DiscordInviteRequest)
              end
          end    
    })

    

    disc:AddButton({
        Name = "Copy Invite",
        Callback = function()
                 setclipboard("https://discord.gg/kaosgen")
          end    
    })

	local Main = Window:MakeTab({
		Name = "Main",
		Icon = "rbxassetid://3944688398",
		PremiumOnly = false
	})

	local Misc = Main:AddSection({
		Name = "Farm"
	})

	Misc:AddToggle({
		Name = "Auto Tap",
		Default = false,
		Save = true,
		Flag = "AutoTap",
		Callback = function(Value)
			AutoTapLooping = Value
			while AutoTapLooping and task.wait() do
				Network:FireServer("ClickDetect")
			end
		end
	})


	Misc:AddToggle({
		Name = "Auto Rebirth",
		Default = false,
		Save = true,
		Flag = "AutoRebirth",
		Callback = function(Value)
			AutoRebirthLooping = Value
			if AutoRebirthLooping then
				if not AutoTapLooping then
				
				Abbreviation.Abbreviate = function(e, number)
					return tostring(number)
				end
			else
				Abbreviation.Abbreviate = PreviousFunction
			end
			while AutoRebirthLooping and task.wait() do
				if tonumber(Player.PlayerGui.ScreenGui.Currencies.Currency1.Amount.Text) and tonumber(Player.PlayerGui.ScreenGui.Currencies.Currency1.Amount.Text) >= 800 then
					Network:FireServer("Rebirth", math.floor(tonumber(Player.PlayerGui.ScreenGui.Currencies.Currency1.Amount.Text) / tonumber(Player.PlayerGui.ScreenGui.Menus.Rebirths.Menu.Holder["1"].Cost.Text:split(" ")[1])))


				end
				end
			end
		end
	})

    local wheel = Main:AddSection({
		Name = "Wheel Config"
	})

	wheel:AddToggle({
		Name = "Auto Claim Wheel",
		Default = false,
		Save = true,
		Flag = "AutoClaimWheel",
		Callback = function(Value)
			AutoWheelLooping = Value
			while AutoWheelLooping and task.wait() do
				for i,v in pairs({1, 2, 3, 4, 5, 6}) do
					Network:FireServer("AttemptSpin", v)
					task.wait(1)
				end
			end
		end
	})

    local msc = Window:MakeTab({
        Name = "Miscellaneous",
        Icon = "rbxassetid://4483362748",
        PremiumOnly = false
    })

	msc:AddToggle({
		Name = "Auto Equip Best Pets",
		Default = false,
		Save = true,
		Flag = "AutoEquip",
		Callback = function(Value)
			AutoEquipLooping = Value
			while AutoEquipLooping and task.wait(1) do
				Network:FireServer("EquipBest")
			end
		end
	})

    msc:AddToggle({
		Name = "Remove Notifications",
		Default = false,
		Save = true,
		Flag = "RemoveNotif",
		Callback = function(Value)
			RemoveNotifLooping = Value
			if RemoveNotifLooping then
				Notifications.Notify = function()
					return
				end
			else
				Notifications.Notify = PreviousFunction3
			end
		end
	})

    local Player = Window:MakeTab({
        Name = "Player",
        Icon = "rbxassetid://6961018885",
        PremiumOnly = false
    })

    Player:AddSlider({
        Name = "Walk Speed",
        Min = 16,
        Max = 200,
        Default = 16,
        Color = Color3.fromRGB(124,252,0),
        Increment = 1,
        ValueName = "",
        Callback = function(v)
            Walk_Speed = v 
            
            local Player = game:GetService("Players").LocalPlayer
            local Index = getrawmetatable(game) 
            local Old_Index = Index.__index
            
            if Player.Character.Humanoid.Health == 0 then 
                repeat 
                    task.wait() 
                until Player.Character and Player.Character.Humanoid.Health > 0 
            end 
            
            local Default_Walk_Speed = Player.Character.Humanoid.WalkSpeed 
            local Default_Jump_Power = Player.Character.Humanoid.JumpPower 
            
            setreadonly(Index,false)
            
            Index.__index = newcclosure(function(self,_)
                if _ == "WalkSpeed" then 
                    return Default_Walk_Speed;
                end 
                if _ == "JumpPower" then 
                    return Default_Jump_Power;
                end 
                return Old_Index(self,_)
            end)
            
            setreadonly(Index,true)
             
            if Player.Character.Humanoid.UseJumpPower == false then 
                Player.Character.Humanoid.UseJumpPower = true 
            end
            
            Player.Character.Humanoid.WalkSpeed = Walk_Speed 
            Player.Character.Humanoid.JumpPower = Jump_Power 
            
            print(Player.Character.Humanoid.WalkSpeed) 
            print(Player.Character.Humanoid.JumpPower)

        end    
    })

    local plr = game.Players.LocalPlayer

    Player:AddSlider({
        Name = "Jump Power",
        Min = 50,
        Max = 500,
        Default = 50,
        Color = Color3.fromRGB(124,252,0),
        Increment = 1,
        ValueName = "",
        Callback = function(v)
            
            Jump_Power = v 
            
            local Player = game:GetService("Players").LocalPlayer
            local Index = getrawmetatable(game) 
            local Old_Index = Index.__index
            
            if Player.Character.Humanoid.Health == 0 then 
                repeat 
                    task.wait() 
                until Player.Character and Player.Character.Humanoid.Health > 0 
            end 
            
            local Default_Walk_Speed = Player.Character.Humanoid.WalkSpeed 
            local Default_Jump_Power = Player.Character.Humanoid.JumpPower 
            
            setreadonly(Index,false)
            
            Index.__index = newcclosure(function(self,_)
                if _ == "WalkSpeed" then 
                    return Default_Walk_Speed;
                end 
                if _ == "JumpPower" then 
                    return Default_Jump_Power;
                end 
                return Old_Index(self,_)
            end)
            
            setreadonly(Index,true)
             
            if Player.Character.Humanoid.UseJumpPower == false then 
                Player.Character.Humanoid.UseJumpPower = true 
            end
            
            Player.Character.Humanoid.WalkSpeed = Walk_Speed 
            Player.Character.Humanoid.JumpPower = Jump_Power 
            
            print(Player.Character.Humanoid.WalkSpeed) 
            print(Player.Character.Humanoid.JumpPower)

        end    
    })

    

    



    Player:AddToggle({
        Name = "Infinite Jumps",
        Default = false,
        Callback = function(Value)
            local InfiniteJumpEnabled = false
            game:GetService("UserInputService").JumpRequest:connect(function()
                if InfiniteJumpEnabled then
                    game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
                end
            end)
        end    
    })

    local Eggs = Window:MakeTab({
        Name = "Eggs",
        Icon = "rbxassetid://4400700509",
        PremiumOnly = false
    })

    Eggs:AddToggle({
		Name = "🐤 Auto Hatch Egg",
		Default = false,
		Save = true,
		Flag = "AutoHatch",
		Callback = function(Value)
			AutoHatchLooping = Value
			while AutoHatchLooping and task.wait() do
				Network:FireServer("OpenCapsules", SelectedEgg, 3)
			end
		end
    })
    
	Eggs:AddDropdown({
		Name = "🥚 Egg",
		Options = EggList,
		Save = true,
		Flag = "SelectedEgg",
		Callback = function(Value)
			SelectedEgg = Value
		end
	})

    local Remove = Eggs:AddSection({
		Name = "Egg Config"
	})

	Remove:AddToggle({
		Name = "🐣 Disable Egg Animation",
		Default = false,
		Save = true,
		Flag = "RemoveEggAnim",
		Callback = function(Value)
			RemoveEggAnimLooping = Value
			if RemoveEggAnimLooping then
				HatchingAnimation.HatchEgg = function()
					return
				end
			else
				HatchingAnimation.HatchEgg = PreviousFunction2
			end
		end
	})

    local tps = Window:MakeTab({
        Name = "Teleports",
        Icon = "rbxassetid://4370344717",
        PremiumOnly = false
    })

	tps:AddButton({
		Name = "Auto Unlock Islands",
		Callback = function()
			for i,v in pairs({{88, 735, -91}, {116, 1379, -117}, {-132, 2557, 351}, {-8, 4391, -68}, {1, 6982, -4}, {105, 10180, 215}}) do
				Player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(v))
				task.wait(1)
			end
		end    
	})


    local sts = Window:MakeTab({
        Name = "Settings",
        Icon = "rbxassetid://4483345737",
        PremiumOnly = false
    })

    sts:AddButton({
        Name = "Destroy UI",
        Callback = function()
            OrionLib:Destroy()
          end    
    })





	Credits(Window)
end

OrionLib:Init()
